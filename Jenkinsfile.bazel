pipeline {
    agent any
    
    environment {
        PROJECT_NAME = 'bazel-python-demo'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out Bazel Python code...'
                checkout scm
            }
        }
        
        stage('Setup Build Environment') {
            steps {
                echo 'Installing build tools and creating non-root user...'
                sh '''
                    # Install build tools as root
                    apt-get update
                    apt-get install -y build-essential curl python3 python3-dev sudo
                    
                    # Create a non-root user for Bazel
                    useradd -m -s /bin/bash bazeluser || echo "User already exists"
                    
                    # Give bazeluser ownership of workspace
                    chown -R bazeluser:bazeluser /var/jenkins_home/workspace/
                    
                    # Verify installations
                    gcc --version
                    python3 --version
                    echo "Build environment setup completed!"
                '''
            }
        }
        
        stage('Install Bazelisk') {
            steps {
                echo 'Installing Bazelisk as non-root user...'
                sh '''
                    # Install Bazelisk as bazeluser
                    sudo -u bazeluser bash -c '
                        if ! command -v bazel &> /dev/null; then
                            echo "Installing Bazelisk..."
                            curl -L -o bazelisk "https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64"
                            chmod +x bazelisk
                            mkdir -p ~/bin
                            mv bazelisk ~/bin/bazel
                            export PATH="$HOME/bin:$PATH"
                            ~/bin/bazel version
                        else
                            echo "Bazel is already installed."
                            bazel version
                        fi
                    '
                '''
            }
        }
        
        stage('Build Hello Target') {
            steps {
                echo 'Building the hello target as non-root user...'
                sh '''
                    # Build as bazeluser
                    sudo -u bazeluser bash -c '
                        export PATH="$HOME/bin:$PATH"
                        cd /var/jenkins_home/workspace/"$JOB_NAME"
                        bazel build //:hello
                    '
                '''
            }
        }
        
        stage('Run Application') {
            steps {
                echo 'Running the Python application...'
                sh '''
                    # Run as bazeluser
                    sudo -u bazeluser bash -c '
                        export PATH="$HOME/bin:$PATH"
                        cd /var/jenkins_home/workspace/"$JOB_NAME"
                        bazel run //:hello
                    '
                '''
            }
        }
    }
    
    post {
        always {
            echo 'Bazel pipeline completed!'
            sh '''
                sudo -u bazeluser bash -c '
                    export PATH="$HOME/bin:$PATH"
                    cd /var/jenkins_home/workspace/"$JOB_NAME"
                    bazel shutdown || true
                ' || true
            '''
        }
        success {
            echo 'Bazel build succeeded! üéâ'
            echo 'Python application ran successfully with Bazel!'
        }
        failure {
            echo 'Bazel build failed! ‚ùå'
            echo 'Check the logs above for details.'
        }
    }
}